<?xml version="1.0" encoding="UTF-8"?><testrun name="UserRepositoryTests (1)" project="spring-boot-JDBC-multi" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="com.springboot.jdbc.repository.UserRepositoryTests" time="1.603">
    <testcase name="testSave" classname="com.springboot.jdbc.repository.UserRepositoryTests" time="1.603">
      <error>org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLSyntaxErrorException: Unknown database 'mysql.test'&#13;
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:612)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:862)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:917)&#13;
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:927)&#13;
	at com.springboot.jdbc.respository.Impl.UserRepositoryImpl.save(UserRepositoryImpl.java:28)&#13;
	at com.springboot.jdbc.respository.Impl.UserRepositoryImpl$$FastClassBySpringCGLIB$$28b64cbb.invoke(&lt;generated&gt;)&#13;
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)&#13;
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)&#13;
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)&#13;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)&#13;
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)&#13;
	at com.springboot.jdbc.respository.Impl.UserRepositoryImpl$$EnhancerBySpringCGLIB$$5c2734aa.save(&lt;generated&gt;)&#13;
	at com.springboot.jdbc.repository.UserRepositoryTests.testSave(UserRepositoryTests.java:35)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
Caused by: java.sql.SQLSyntaxErrorException: Unknown database 'mysql.test'&#13;
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)&#13;
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)&#13;
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)&#13;
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)&#13;
	at com.mysql.cj.jdbc.ConnectionImpl.&lt;init&gt;(ConnectionImpl.java:455)&#13;
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)&#13;
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:207)&#13;
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)&#13;
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)&#13;
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)&#13;
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)&#13;
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)&#13;
	at com.zaxxer.hikari.pool.HikariPool.&lt;init&gt;(HikariPool.java:115)&#13;
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)&#13;
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)&#13;
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)&#13;
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)&#13;
	... 45 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
