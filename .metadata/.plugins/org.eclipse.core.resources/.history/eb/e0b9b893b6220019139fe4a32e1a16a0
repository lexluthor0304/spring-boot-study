package com.springboot.jdbc.respository.Impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.springboot.jdbc.model.User;
import com.springboot.jdbc.respository.UserRepository;

@Repository
public class UserRepositoryImpl implements UserRepository {

	@Override
	public int save(User user) {
		// ユーザー保存
		return jdbcTemplate.update("INSTER INTO users(name, password, age) values(?, ?, ?)",
				user.getName(), user.getPassword(), user.getAge());
	}

	@Override
	public int update(User user) {
		// データ更新
		return jdbcTemplate.update("UPDATE users SET name = ?, password = ?, age = ? WHERE id = ?",
				user.getName(), user.getPassword(), user.getAge(), user.getId());
	}

	@Override
	public int delete(long id) {
		// 削除
		return jdbcTemplate.update("DELETE FROM users where id = ?", id);
	}

	@Override
	public List<User> findAll() {
		// ゲットリスト
		return jdbcTemplate.query("SELECT * FROM users", new UserRowMapper());
	}

	@Override
	public User findById(long id) {
		// IDでセレクト
		return jdbcTemplate.queryForObject("SELECT * FROM users WHERE id = ?", new Object[] { id }, new BeanPropertyRowMapper<User>(User.class));
	}

	@Autowired
	private JdbcTemplate jdbcTemplate;

	class UserRowMapper implements RowMapper<User> {

		@Override
		public User mapRow(ResultSet rs, int rowNum) throws SQLException {
			User user = new User();
			user.setId(rs.getLong("id"));
			user.setName(rs.getString("name"));
			user.setPassword(rs.getString("password"));
			user.setAge(rs.getInt("age"));
		}
	}
}
